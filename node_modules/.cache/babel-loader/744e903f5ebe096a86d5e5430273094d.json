{"ast":null,"code":"import axios from \"axios\";\nexport const url = {\n  getAircrafts: params => `https://infinite-dawn-93085.herokuapp.com/aircrafts?offset=${params[0]}&limit=${params[1]}`,\n  getFlights: params => `https://infinite-dawn-93085.herokuapp.com/flights?offset=${params[0]}&limit=${params[1]}`\n};\nexport const getAircrafts = async _ref => {\n  let {\n    offset,\n    limit\n  } = _ref;\n  const {\n    data\n  } = await axios.get(url.getAircrafts([offset, limit]));\n  return data;\n};\nexport const getFlights = async _ref2 => {\n  let {\n    offset,\n    limit\n  } = _ref2;\n  const {\n    data\n  } = await axios.get(url.getFlights([offset, limit]));\n  return data;\n};","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/aircrafts-scheduling/src/api/airline.ts"],"names":["axios","url","getAircrafts","params","getFlights","offset","limit","data","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAG;AACjBC,EAAAA,YAAY,EAAGC,MAAD,IACX,8DAA6DA,MAAM,CAAC,CAAD,CAAI,UAASA,MAAM,CAAC,CAAD,CAAI,EAF5E;AAGjBC,EAAAA,UAAU,EAAGD,MAAD,IACT,4DAA2DA,MAAM,CAAC,CAAD,CAAI,UAASA,MAAM,CAAC,CAAD,CAAI;AAJ1E,CAAZ;AAYP,OAAO,MAAMD,YAAY,GAAG,cAAmC;AAAA,MAA5B;AAACG,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAA4B;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,KAAK,CAACQ,GAAN,CAAUP,GAAG,CAACC,YAAJ,CAAiB,CAACG,MAAD,EAASC,KAAT,CAAjB,CAAV,CAAvB;AAEA,SAAOC,IAAP;AACD,CAJM;AAOP,OAAO,MAAMH,UAAU,GAAG,eAAqC;AAAA,MAA9B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA8B;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,KAAK,CAACQ,GAAN,CAAUP,GAAG,CAACG,UAAJ,CAAe,CAACC,MAAD,EAASC,KAAT,CAAf,CAAV,CAAvB;AAEA,SAAOC,IAAP;AACD,CAJM","sourcesContent":["import axios from \"axios\";\n\nexport const url = {\n  getAircrafts: (params: number[]) =>\n    `https://infinite-dawn-93085.herokuapp.com/aircrafts?offset=${params[0]}&limit=${params[1]}`,\n  getFlights: (params: number[]) =>\n    `https://infinite-dawn-93085.herokuapp.com/flights?offset=${params[0]}&limit=${params[1]}`,\n};\n\ntype Params = {\n    offset: number;\n    limit: number;\n};\n\nexport const getAircrafts = async ({offset, limit}: Params) => {\n  const { data } = await axios.get(url.getAircrafts([offset, limit]));\n\n  return data;\n};\n\n\nexport const getFlights = async ({ offset, limit }: Params) => {\n  const { data } = await axios.get(url.getFlights([offset, limit]));\n\n  return data;\n};"]},"metadata":{},"sourceType":"module"}