{"ast":null,"code":"var _jsxFileName = \"/Users/bernardo.vitoria/projects/FE/challenge/src/components/DateSelection/DateSelection.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { useFormContext } from \"react-hook-form\";\nimport './DateSelection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateSelection = ({\n  label\n}) => {\n  _s();\n\n  const {\n    control\n  } = useFormContext();\n  const [value, setValue] = React.useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-selection\",\n    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDateFns,\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        label: label,\n        value: undefined,\n        onChange: () => {},\n        clearText: false,\n        inputFormat: \"dd/MM/yyyy\",\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DateSelection, \"2C3yfECFEZCl+N1Y0QwIGVKWtNQ=\", false, function () {\n  return [useFormContext];\n});\n\n_c = DateSelection;\nexport default DateSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateSelection\");","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/components/DateSelection/DateSelection.tsx"],"names":["React","TextField","AdapterDateFns","LocalizationProvider","DatePicker","useFormContext","DateSelection","label","control","value","setValue","useState","undefined","params"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,+BAAjC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAAqBC,cAArB,QAA2C,iBAA3C;AACA,OAAO,qBAAP;;;AAOA,MAAMC,aAA8B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAcH,cAAc,EAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAA4B,IAA5B,CAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BAQQ,QAAC,oBAAD;AAAsB,MAAA,WAAW,EAAET,cAAnC;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEK,KADT;AAEE,QAAA,KAAK,EAAEK,SAFT;AAGE,QAAA,QAAQ,EAAE,MAAM,CAAE,CAHpB;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,WAAW,EAAE,YALf;AAME,QAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAN3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARR;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA/BD;;GAAMP,a;UACgBD,c;;;KADhBC,a;AAiCN,eAAeA,aAAf","sourcesContent":["import * as React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\nimport DatePicker from \"@mui/lab/DatePicker\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport './DateSelection.css';\nimport { FormHelperText } from \"@mui/material\";\n\ntype Props = {\n  label: string;\n};\n\nconst DateSelection: React.FC<Props> = ({ label }) => {\n  const { control } = useFormContext<any>();\n  const [value, setValue] = React.useState<Date | null>(null);\n\n  return (\n    <div className=\"date-selection\">\n      {/* <Controller\n        control={control}\n        name=\"birthday\"\n        render={({ field: { onChange, value }, fieldState: { error } }) => {\n          const isError = Boolean(error);\n\n          return ( */}\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <DatePicker\n                label={label}\n                value={undefined}\n                onChange={() => {}}\n                clearText={false}\n                inputFormat={\"dd/MM/yyyy\"}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              {/* {isError && (\n                <FormHelperText error={isError}>Error</FormHelperText>\n              )} */}\n            </LocalizationProvider>\n         {/*  );\n        }}\n      /> */}\n    </div>\n  );\n}\n\nexport default DateSelection;\n"]},"metadata":{},"sourceType":"module"}