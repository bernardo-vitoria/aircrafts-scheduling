{"ast":null,"code":"var _jsxFileName = \"/Users/bernardo.vitoria/projects/FE/challenge/src/pages/MainPage/ClientForm/ClientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from \"@mui/material/Button\";\nimport { TextInput, DropdownSelection, DateSelection, AlertMessage } from \"../../../components\";\nimport './ClientForm.css';\nimport { useClientStore } from '../../../store';\nimport { useCountries } from '../../../hooks';\nimport { format } from \"date-fns\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getInitialState = () => ({\n  nameField: '',\n  surname: '',\n  country: '',\n  birthday: ''\n});\n\nconst ClientForm = ({\n  clients,\n  setClients\n}) => {\n  _s();\n\n  const defaultValues = getInitialState();\n  const methods = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n    criteriaMode: \"all\",\n    defaultValues\n  });\n  const {\n    watch\n  } = methods;\n  const formData = watch();\n  const [alert, setAlert] = useState();\n  const countries = useCountries();\n  const {\n    name,\n    setName,\n    surname,\n    setSurname,\n    country,\n    setCountry,\n    birthday,\n    setBirthday\n  } = useClientStore(state => ({\n    name: state.name,\n    setName: state.setName,\n    surname: state.surname,\n    setSurname: state.setSurname,\n    country: state.country,\n    setCountry: state.setCountry,\n    birthday: state.birthday,\n    setBirthday: state.setBirthday\n  }));\n  React.useEffect(() => {\n    console.log(formData);\n  }, [formData]);\n\n  const handleOnSave = () => {\n    if (!birthday) return;\n    const newClient = {\n      name,\n      surname,\n      country,\n      birthday\n    };\n    const birthdayDate = new Date(birthday);\n    const yearsOld = parseInt(format(new Date(), \"yyyy\")) - parseInt(format(birthdayDate, \"yyyy\"));\n    const newAlert = `Hello ${name} from ${country} on ${format(birthdayDate, \"dd\")} of ${format(birthdayDate, \"MM\")} you will have ${yearsOld}}`;\n    setAlert(newAlert);\n    setClients([...clients, newClient]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-form\",\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Name\",\n        defaultValue: \"Name Here\",\n        value: name,\n        setValue: setName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Surname\",\n        defaultValue: \"Name Here\",\n        value: surname,\n        setValue: setSurname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), countries.length > 0 && /*#__PURE__*/_jsxDEV(DropdownSelection, {\n        label: \"Countries\",\n        value: country,\n        setValue: setCountry,\n        data: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(DateSelection, {\n        label: \"Birthday\",\n        value: birthday,\n        setValue: setBirthday\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"client-form--submition\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: handleOnSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"client-form--alert\",\n        children: /*#__PURE__*/_jsxDEV(AlertMessage, {\n          message: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClientForm, \"DA0yRCgbzGUPToISh9CmQxN2UBg=\", false, function () {\n  return [useForm, useCountries, useClientStore];\n});\n\n_c = ClientForm;\nexport default ClientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientForm\");","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/pages/MainPage/ClientForm/ClientForm.tsx"],"names":["React","useState","Button","TextInput","DropdownSelection","DateSelection","AlertMessage","useClientStore","useCountries","format","useForm","FormProvider","getInitialState","nameField","surname","country","birthday","ClientForm","clients","setClients","defaultValues","methods","mode","reValidateMode","criteriaMode","watch","formData","alert","setAlert","countries","name","setName","setSurname","setCountry","setBirthday","state","useEffect","console","log","handleOnSave","newClient","birthdayDate","Date","yearsOld","parseInt","newAlert","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from \"@mui/material/Button\";\nimport { TextInput, DropdownSelection, DateSelection, AlertMessage } from \"../../../components\";\nimport './ClientForm.css';\nimport { useClientStore } from '../../../store';\nimport { useCountries } from '../../../hooks';\nimport { Client } from '../';\nimport { format } from \"date-fns\";\nimport { useForm, Controller, FormProvider } from \"react-hook-form\";\n\ninterface InitialState {\n  nameField: string;\n  surname: string;\n  country: string;\n  birthday: string;\n}\n\nconst getInitialState = (): InitialState => ({\n  nameField: '',\n  surname: '',\n  country: '',\n  birthday: '',\n});\n\ntype Props = {\n  clients: Client[];\n  setClients: (value: Client[]) => void;\n};\n\n\nconst ClientForm: React.FC<Props> = ({ clients, setClients }) => {\n  const defaultValues = getInitialState();\n\n  const methods = useForm({\n    mode: \"onChange\",\n    reValidateMode: \"onChange\",\n    criteriaMode: \"all\",\n    defaultValues,\n  });\n\n  const { watch } = methods;\n\n  const formData = watch();\n\nconst [alert, setAlert] = useState<string>();\n  const countries = useCountries();\n\n  const {\n    name,\n    setName,\n    surname,\n    setSurname,\n    country,\n    setCountry,\n    birthday,\n    setBirthday,\n  } = useClientStore((state) => ({\n    name: state.name,\n    setName: state.setName,\n    surname: state.surname,\n    setSurname: state.setSurname,\n    country: state.country,\n    setCountry: state.setCountry,\n    birthday: state.birthday,\n    setBirthday: state.setBirthday\n  }));\n\n  React.useEffect(() => {\n    console.log(formData);\n  }, [formData])\n\n  const handleOnSave = () => {\n    if(!birthday) return;\n\n    const newClient = {\n      name,\n      surname,\n      country,\n      birthday,\n    };\n\n    const birthdayDate = new Date(birthday);\n    const yearsOld = parseInt(format(new Date(), \"yyyy\")) - parseInt(format(birthdayDate, \"yyyy\"));\n    \n     const newAlert = `Hello ${name} from ${country} on ${format(\n       birthdayDate,\n       \"dd\"\n     )} of ${format(birthdayDate, \"MM\")} you will have ${yearsOld}}`;\n    \n    setAlert(newAlert);\n\n    setClients([...clients, newClient]);\n   \n  };\n  \n\n      return (\n        <FormProvider {...methods}>\n          <div className=\"client-form\">\n            <TextInput\n              label={\"Name\"}\n              defaultValue={\"Name Here\"}\n              value={name}\n              setValue={setName}\n            />\n            <TextInput\n              label={\"Surname\"}\n              defaultValue={\"Name Here\"}\n              value={surname}\n              setValue={setSurname}\n            />\n            {countries.length > 0 && (\n              <DropdownSelection\n                label={\"Countries\"}\n                value={country}\n                setValue={setCountry}\n                data={countries}\n              />\n            )}\n            <DateSelection\n              label={\"Birthday\"}\n              value={birthday}\n              setValue={setBirthday}\n            />\n            <div className=\"client-form--submition\">\n              <Button variant=\"outlined\" onClick={handleOnSave}>\n                Save\n              </Button>\n            </div>\n            <div className=\"client-form--alert\">\n              <AlertMessage message={alert} />\n            </div>\n          </div>\n        </FormProvider>\n      );\n    };\n\nexport default ClientForm;\n"]},"metadata":{},"sourceType":"module"}