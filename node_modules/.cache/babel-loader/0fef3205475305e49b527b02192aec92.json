{"ast":null,"code":"import create from \"zustand\";\nconst useSharedStore = create(set => ({\n  isOpenDrawer: false,\n  setIsOpenDrawer: value => set({\n    isOpenDrawer: value\n  })\n}));\nexport default useSharedStore;","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/store/useSharedStore.ts"],"names":["create","useSharedStore","set","isOpenDrawer","setIsOpenDrawer","value"],"mappings":"AAAA,OAAOA,MAAP,MAAiC,SAAjC;AAOA,MAAMC,cAAc,GAAGD,MAAM,CAAeE,GAAD,KAAiC;AAC1EC,EAAAA,YAAY,EAAE,KAD4D;AAE1EC,EAAAA,eAAe,EAAGC,KAAD,IAAWH,GAAG,CAAC;AAAEC,IAAAA,YAAY,EAAEE;AAAhB,GAAD;AAF2C,CAAjC,CAAd,CAA7B;AAKA,eAAeJ,cAAf","sourcesContent":["import create, { SetState } from \"zustand\";\n\ntype SharedStore = {\n  isOpenDrawer: boolean;\n  setIsOpenDrawer: (newValue: boolean) => void;\n}\n\nconst useSharedStore = create<SharedStore>((set: SetState<SharedStore>) => ({\n  isOpenDrawer: false,\n  setIsOpenDrawer: (value) => set({ isOpenDrawer: value}),\n}));\n\nexport default useSharedStore;"]},"metadata":{},"sourceType":"module"}