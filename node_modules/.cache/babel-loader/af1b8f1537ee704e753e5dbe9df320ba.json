{"ast":null,"code":"// @ts-nocheck\n\n/* import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport globalEN from \"./locales/en/global\";\n\nconst resources = {\n  'en-US': {\n    'global': globalEN\n  }\n};\n\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\n    fallbackLng: 'en', debug: true, detection: {\n    order:['queryString', 'cookie'],\n    cache: ['cookie'],\n    resources,\n  },\n    interpolation: {\n    escapeValue: false\n  }\n}) \n\n\n\nexport default i18n;*/\nimport { initReactI18next } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nexport const i18nBaseConfig = {\n  fallbackLng: \"pt-PT\",\n  whitelist: [\"en-US\", \"pt-PT\"],\n  defaultNS: \"global\",\n  ns: [\"global\", \"clients\"],\n  interpolation: {\n    escapeValue: false\n  },\n  react: {\n    useSuspense: false\n  }\n};\nconst i18nConfig = { ...i18nBaseConfig,\n  lng: \"pt\",\n  backend: {\n    crossDomain: true,\n    loadPath: `http://localhost:3000/locales/{{lng}}/{{ns}}.json`\n  }\n};\ni18n.use(initReactI18next).use(Backend).init(i18nConfig);\nexport default i18n;","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/config/i18n.ts"],"names":["initReactI18next","i18n","Backend","i18nBaseConfig","fallbackLng","whitelist","defaultNS","ns","interpolation","escapeValue","react","useSuspense","i18nConfig","lng","backend","crossDomain","loadPath","use","init"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,gBAAT,QAAiC,eAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,WAAW,EAAE,OADe;AAE5BC,EAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,OAAV,CAFiB;AAG5BC,EAAAA,SAAS,EAAE,QAHiB;AAI5BC,EAAAA,EAAE,EAAE,CACF,QADE,EAEF,SAFE,CAJwB;AAS5BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA,GATa;AAY5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR;AAZqB,CAAvB;AAiBP,MAAMC,UAAU,GAAG,EACjB,GAAGT,cADc;AAEjBU,EAAAA,GAAG,EAAE,IAFY;AAGjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE,IADN;AAEPC,IAAAA,QAAQ,EAAG;AAFJ;AAHQ,CAAnB;AASEf,IAAI,CAACgB,GAAL,CAASjB,gBAAT,EAA2BiB,GAA3B,CAA+Bf,OAA/B,EAAwCgB,IAAxC,CAA6CN,UAA7C;AAIF,eAAeX,IAAf","sourcesContent":["// @ts-nocheck\n/* import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport globalEN from \"./locales/en/global\";\n\nconst resources = {\n  'en-US': {\n    'global': globalEN\n  }\n};\n\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\n    fallbackLng: 'en', debug: true, detection: {\n    order:['queryString', 'cookie'],\n    cache: ['cookie'],\n    resources,\n  },\n    interpolation: {\n    escapeValue: false\n  }\n}) \n\n\n\nexport default i18n;*/\n\nimport { initReactI18next } from \"react-i18next\";\nimport i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\n\nexport const i18nBaseConfig = {\n  fallbackLng: \"pt-PT\",\n  whitelist: [\"en-US\", \"pt-PT\"],\n  defaultNS: \"global\",\n  ns: [\n    \"global\",\n    \"clients\"\n  ],\n\n  interpolation: {\n    escapeValue: false,\n  },\n  react: {\n    useSuspense: false,\n  },\n};\n\nconst i18nConfig = {\n  ...i18nBaseConfig,\n  lng: \"pt\",\n  backend: {\n    crossDomain: true,\n    loadPath: `http://localhost:3000/locales/{{lng}}/{{ns}}.json`,\n  },\n};\n\n  i18n.use(initReactI18next).use(Backend).init(i18nConfig);\n\n\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}