{"ast":null,"code":"var _jsxFileName = \"/Users/bernardo.vitoria/projects/FE/challenge/src/components/TextInput/TextInput.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport './TextInput.css';\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextInput = ({\n  label,\n  defaultValue,\n  setValue\n}) => {\n  _s();\n\n  const {\n    control\n  } = useFormContext(); //const handleOnChange = (e: Event) => setValue(e.target.value);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      \"& .MuiTextField-root\": {\n        marginTop: \"8px\",\n        marginBottom: \"8px\",\n        marginLeft: \"4px\",\n        marginRight: \"4px\",\n        display: \"grid\"\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"nameField\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => {\n        console.log(\"onChange\", onChange);\n        console.log(\"value\", value);\n        return /*#__PURE__*/_jsxDEV(TextField, {\n          error: true,\n          id: \"outlined-helperText\",\n          label: label,\n          placeholder: defaultValue,\n          value: value,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextInput, \"z/KfZpa3t+bYGQBkgyMD0Z+tmbA=\", false, function () {\n  return [useFormContext];\n});\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/components/TextInput/TextInput.tsx"],"names":["React","Box","TextField","Controller","useFormContext","TextInput","label","defaultValue","setValue","control","marginTop","marginBottom","marginLeft","marginRight","display","field","onChange","value","console","log"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,iBAAP;AAEA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,iBAA3C;;;AAWA,MAAMC,SAA0B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAD,KAAqC;AAAA;;AACtE,QAAM;AAAGC,IAAAA;AAAH,MAAgBL,cAAc,EAApC,CADsE,CAGtE;;AAEA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,EAAE,EAAE;AACF,8BAAwB;AACtBM,QAAAA,SAAS,EAAE,KADW;AAEtBC,QAAAA,YAAY,EAAE,KAFQ;AAGtBC,QAAAA,UAAU,EAAE,KAHU;AAItBC,QAAAA,WAAW,EAAE,KAJS;AAKtBC,QAAAA,OAAO,EAAE;AALa;AADtB,KAFN;AAWE,IAAA,UAAU,MAXZ;AAYE,IAAA,YAAY,EAAC,KAZf;AAAA,2BAcE,QAAC,UAAD;AACE,MAAA,OAAO,EAAEL,OADX;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,MAAM,EAAE,CAAC;AAAEM,QAAAA,KAAK,EAAE;AAAEC,UAAAA,QAAF;AAAYC,UAAAA;AAAZ;AAAT,OAAD,KAAmC;AACzCC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,4BACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAE,IADT;AAEE,UAAA,EAAE,EAAC,qBAFL;AAGE,UAAA,KAAK,EAAEX,KAHT;AAIE,UAAA,WAAW,EAAEC,YAJf;AAKE,UAAA,KAAK,EAAEU,KALT;AAME,UAAA,QAAQ,EAAED;AANZ;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD;AAjBH;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CAzCD;;GAAMX,S;UACkBD,c;;;KADlBC,S;AA2CN,eAAeA,SAAf","sourcesContent":["import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport './TextInput.css'\nimport { ChangeEvent } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\n\ntype Event = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\n\ntype Props = {\n  label: string;\n  defaultValue: string;\n  value: string;\n  setValue: (newValue: string) => void;\n};\n\nconst TextInput: React.FC<Props> = ({label, defaultValue, setValue}) => {\n  const {  control  } = useFormContext<any>();\n\n  //const handleOnChange = (e: Event) => setValue(e.target.value);\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": {\n          marginTop: \"8px\",\n          marginBottom: \"8px\",\n          marginLeft: \"4px\",\n          marginRight: \"4px\",\n          display: \"grid\",\n        },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <Controller\n        control={control}\n        name=\"nameField\"\n        render={({ field: { onChange, value }}) => {\n          console.log(\"onChange\", onChange);\n          console.log(\"value\", value);\n\n          return (\n            <TextField\n              error={true}\n              id=\"outlined-helperText\"\n              label={label}\n              placeholder={defaultValue}\n              value={value}\n              onChange={onChange}\n            />\n          );\n        }}\n      />\n    </Box>\n  );\n}\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}