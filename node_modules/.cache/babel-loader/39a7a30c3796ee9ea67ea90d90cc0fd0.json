{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useQuery } from \"react-query\";\nimport { getFlights } from \"../api\";\n\nconst useFlights = ({\n  offset,\n  limit\n}) => {\n  _s();\n\n  const {\n    data: flights,\n    isFetching\n  } = useQuery(\"photos\", () => getFlights({\n    offset,\n    limit\n  }), {\n    refetchOnWindowFocus: false,\n    staleTime: 60000\n  });\n  if (isFetching) return {\n    isLoading: isFetching,\n    flights: []\n  };\n  return {\n    flights: flights.slice(offset, limit)\n  };\n};\n\n_s(useFlights, \"BHPd9qoNvvj+4MkourtRIKPaqYE=\", false, function () {\n  return [useQuery];\n});\n\nexport default useFlights;","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/aircraft-scheduling/src/hooks/useFlights.ts"],"names":["useQuery","getFlights","useFlights","offset","limit","data","flights","isFetching","refetchOnWindowFocus","staleTime","isLoading","slice"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;;AASA,MAAMC,UAAgB,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAAA;;AAC5C,QAAM;AAAEC,IAAAA,IAAI,EAAEC,OAAR;AAAiBC,IAAAA;AAAjB,MAAgCP,QAAQ,CAAM,QAAN,EAAgB,MAAMC,UAAU,CAAC;AAACE,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,CAAhC,EAAmD;AAC/FI,IAAAA,oBAAoB,EAAE,KADyE;AAE/FC,IAAAA,SAAS,EAAE;AAFoF,GAAnD,CAA9C;AAKA,MAAIF,UAAJ,EAAgB,OAAO;AAAEG,IAAAA,SAAS,EAAEH,UAAb;AAAyBD,IAAAA,OAAO,EAAE;AAAlC,GAAP;AAEhB,SAAO;AAAEA,IAAAA,OAAO,EAAEA,OAAO,CAACK,KAAR,CAAcR,MAAd,EAAsBC,KAAtB;AAAX,GAAP;AACD,CATD;;GAAMF,U;UACkCF,Q;;;AAUxC,eAAeE,UAAf","sourcesContent":["import { useQuery } from \"react-query\";\nimport { getFlights } from \"../api\";\n\ntype HookParams = {\n  offset: number;\n  limit: number;\n};\n\ntype Hook = (params: HookParams) => any;\n\nconst useFlights: Hook = ({offset, limit}) => {\n  const { data: flights, isFetching } = useQuery<any>(\"photos\", () => getFlights({offset, limit}), {\n    refetchOnWindowFocus: false,\n    staleTime: 60000,\n  });\n\n  if (isFetching) return { isLoading: isFetching, flights: [] };\n\n  return { flights: flights.slice(offset, limit) };\n};\n\nexport default useFlights;\n"]},"metadata":{},"sourceType":"module"}