{"ast":null,"code":"// @ts-nocheck\nimport i18n from \"i18next\";\n\n/* \nconst resources = {\n  'en-US': {\n    'global': globalEN\n  }\n};\n\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\n    fallbackLng: 'en', debug: true, detection: {\n    order:['queryString', 'cookie'],\n    cache: ['cookie'],\n    resources,\n  },\n    interpolation: {\n    escapeValue: false\n  }\n}) */\nexport default i18n;","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/config/i18n.ts"],"names":["i18n"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,SAAjB;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAeA,IAAf","sourcesContent":["// @ts-nocheck\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport globalEN from \"./locales/en/global\";\n/* \nconst resources = {\n  'en-US': {\n    'global': globalEN\n  }\n};\n\ni18n.use(Backend).use(LanguageDetector).use(initReactI18next).init({\n    fallbackLng: 'en', debug: true, detection: {\n    order:['queryString', 'cookie'],\n    cache: ['cookie'],\n    resources,\n  },\n    interpolation: {\n    escapeValue: false\n  }\n}) */\n\nexport default i18n;"]},"metadata":{},"sourceType":"module"}