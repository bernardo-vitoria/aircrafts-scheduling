{"ast":null,"code":"var _jsxFileName = \"/Users/bernardo.vitoria/projects/FE/challenge/src/pages/MainPage/ClientForm/ClientForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from \"@mui/material/Button\";\nimport { TextInput, DropdownSelection, DateSelection, AlertMessage } from \"../../../components\";\nimport './ClientForm.css';\nimport { useClientStore } from '../../../store';\nimport { useCountries } from '../../../hooks';\nimport { format } from \"date-fns\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ClientForm = ({\n  clients,\n  setClients\n}) => {\n  _s();\n\n  const [alert, setAlert] = useState();\n  const countries = useCountries();\n  const {\n    name,\n    setName,\n    surname,\n    setSurname,\n    country,\n    setCountry,\n    birthday,\n    setBirthday\n  } = useClientStore(state => ({\n    name: state.name,\n    setName: state.setName,\n    surname: state.surname,\n    setSurname: state.setSurname,\n    country: state.country,\n    setCountry: state.setCountry,\n    birthday: state.birthday,\n    setBirthday: state.setBirthday\n  }));\n\n  const handleOnSave = () => {\n    if (!birthday) return;\n    const newClient = {\n      name,\n      surname,\n      country,\n      birthday\n    };\n    const birthdayDate = new Date(birthday);\n    const yearsOld = parseInt(format(new Date(), \"yyyy\")) - parseInt(format(birthdayDate, \"yyyy\"));\n    const newAlert = `Hello ${name} from ${country} on ${format(birthdayDate, \"dd\")} of ${format(birthdayDate, \"MM\")} you will have ${yearsOld}}`;\n    setAlert(newAlert);\n    setClients([...clients, newClient]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-form\",\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Name\",\n      defaultValue: \"Name Here\",\n      value: name,\n      setValue: setName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      label: \"Surname\",\n      defaultValue: \"Name Here\",\n      value: surname,\n      setValue: setSurname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), countries.length > 0 && /*#__PURE__*/_jsxDEV(DropdownSelection, {\n      label: \"Countries\",\n      value: country,\n      setValue: setCountry,\n      data: countries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(DateSelection, {\n      label: \"Birthday\",\n      value: birthday,\n      setValue: setBirthday\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-form--submition\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleOnSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"client-form--alert\",\n      children: /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ClientForm, \"6p5/BwvslgmlF5LxTHfDNUZmvII=\", false, function () {\n  return [useCountries, useClientStore];\n});\n\n_c = ClientForm;\nexport default ClientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientForm\");","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/pages/MainPage/ClientForm/ClientForm.tsx"],"names":["React","useState","Button","TextInput","DropdownSelection","DateSelection","AlertMessage","useClientStore","useCountries","format","ClientForm","clients","setClients","alert","setAlert","countries","name","setName","surname","setSurname","country","setCountry","birthday","setBirthday","state","handleOnSave","newClient","birthdayDate","Date","yearsOld","parseInt","newAlert","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Button from \"@mui/material/Button\";\nimport { TextInput, DropdownSelection, DateSelection, AlertMessage } from \"../../../components\";\nimport './ClientForm.css';\nimport { useClientStore } from '../../../store';\nimport { useCountries } from '../../../hooks';\nimport { Client } from '../';\nimport { format } from \"date-fns\";\n\ntype Props = {\n  clients: Client[];\n  setClients: (value: Client[]) => void;\n};\n\n\nconst ClientForm: React.FC<Props> = ({ clients, setClients }) => {\nconst [alert, setAlert] = useState<string>();\n  const countries = useCountries();\n\n  const {\n    name,\n    setName,\n    surname,\n    setSurname,\n    country,\n    setCountry,\n    birthday,\n    setBirthday,\n  } = useClientStore((state) => ({\n    name: state.name,\n    setName: state.setName,\n    surname: state.surname,\n    setSurname: state.setSurname,\n    country: state.country,\n    setCountry: state.setCountry,\n    birthday: state.birthday,\n    setBirthday: state.setBirthday\n  }));\n\n  const handleOnSave = () => {\n    if(!birthday) return;\n\n    const newClient = {\n      name,\n      surname,\n      country,\n      birthday,\n    };\n\n    const birthdayDate = new Date(birthday);\n    const yearsOld = parseInt(format(new Date(), \"yyyy\")) - parseInt(format(birthdayDate, \"yyyy\"));\n    \n     const newAlert = `Hello ${name} from ${country} on ${format(\n       birthdayDate,\n       \"dd\"\n     )} of ${format(birthdayDate, \"MM\")} you will have ${yearsOld}}`;\n    \n    setAlert(newAlert);\n\n    setClients([...clients, newClient]);\n   \n  };\n  \n\n      return (\n        <div className=\"client-form\">\n          <TextInput\n            label={\"Name\"}\n            defaultValue={\"Name Here\"}\n            value={name}\n            setValue={setName}\n          />\n          <TextInput\n            label={\"Surname\"}\n            defaultValue={\"Name Here\"}\n            value={surname}\n            setValue={setSurname}\n          />\n        {countries.length > 0 && <DropdownSelection\n            label={\"Countries\"}\n            value={country}\n            setValue={setCountry}\n            data={countries}\n          />}\n          <DateSelection label={\"Birthday\"} value={birthday} setValue={setBirthday}/>\n          <div className=\"client-form--submition\">\n            <Button variant=\"outlined\" onClick={handleOnSave}>Save</Button>\n          </div>\n          <div className=\"client-form--alert\">\n            <AlertMessage message={alert} />\n          </div>\n        </div>\n      );\n    };\n\nexport default ClientForm;\n"]},"metadata":{},"sourceType":"module"}