{"ast":null,"code":"const usePhotos = text => {\n  /* const { data, isFetching } = useQuery<any>(\n    [\"photos\", text],\n    () => getPhotos(text),\n    {\n      refetchOnWindowFocus: false,\n      staleTime: 60000,\n    }\n  );\n   if(isFetching) return { isLoading: isFetching};\n   return { photos: data?.photos, isLoading: isFetching};\n  */\n};\n\nexport default usePhotos;","map":{"version":3,"sources":["/Users/bernardo.vitoria/projects/FE/challenge/src/hooks/usePhotos.ts"],"names":["usePhotos","text"],"mappings":"AASA,MAAMA,SAAe,GAAIC,IAAD,IAAU;AAC9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGC,CAdD;;AAgBA,eAAeD,SAAf","sourcesContent":["import { useQuery } from \"react-query\";\n\nimport { Photos } from \"../api\";\n\ntype Hook = (\n  text: string\n) => \n  { photos?: Photos, isLoading: boolean };\n\nconst usePhotos: Hook = (text) => {\n    /* const { data, isFetching } = useQuery<any>(\n      [\"photos\", text],\n      () => getPhotos(text),\n      {\n        refetchOnWindowFocus: false,\n        staleTime: 60000,\n      }\n    );\n\n    if(isFetching) return { isLoading: isFetching};\n\n    return { photos: data?.photos, isLoading: isFetching};\n */\n};\n\nexport default usePhotos;"]},"metadata":{},"sourceType":"module"}